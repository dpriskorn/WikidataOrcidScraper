[tool.poetry]
name = "wikidataorcidscraper"
version = "0.1.0"
description = ""
authors = ["Dennis Priskorn <you@example.com>"]
license = "GPLv3+"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10, <4.0"
pydantic = "^2.5.3"
flask = "^3.0.1"
requests = "^2.31.0"
# lxml = "^5.1.0"
# beautifulsoup4 = "^4.12.3"
# pyyaml = "^6.0.1"
# flask-sqlalchemy = "^3.1.1"
# mysql = "^0.0.3"
gunicorn = "^21.2.0"
# flatten-json = "^0.1.14"
# wikibaseintegrator = "^0.12.5"


[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
codespell = "^2.2.1"
coverage = "^6.5.0"
dead = "^1.5.0"
mypy = "^1.1.1"
pre-commit = "^2.20.0"
pytest = "^7.1.3"
ruff = "^0.0.263"
safety = "^2.2.0"
tomli = "^2.0.1"
#types-python-dateutil = "^2.8.19.2"
types-requests = "^2.28.11.2"
#virtualenv = "20.17.1"
types-beautifulsoup4 = "^4.12.0.5"
types-pyyaml = "^6.0.12.12"

[tool.ruff]
select = [
  "A",      # flake8-builtins
#  "ASYNC",  # flake8-async # this complains about the all handler.
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "C90",    # McCabe cyclomatic complexity
  "DTZ",    # flake8-datetimez
  "E",      # pycodestyle
  "EXE",    # flake8-executable
  "F",      # Pyflakes
  "FBT",    # flake8-boolean-trap
  "G",      # flake8-logging-format
  "I",      # isort
  "ICN",    # flake8-import-conventions
  "INP",    # flake8-no-pep420
  "INT",    # flake8-gettext
  "ISC",    # flake8-implicit-str-concat
  "N",      # pep8-naming
  "PGH",    # pygrep-hooks
  "PIE",    # flake8-pie
  "PL",     # Pylint
  "PT",     # flake8-pytest-style
  "PTH",    # flake8-use-pathlib
  "PYI",    # flake8-pyi
  "RSE",    # flake8-raise
  "RUF",    # Ruff-specific rules
  "S",      # flake8-bandit
  "SIM",    # flake8-simplify
  "SLF",    # flake8-self
  "T10",    # flake8-debugger
  "TCH",    # flake8-type-checking
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # pycodestyle
  "YTT",    # flake8-2020
  # "ANN",  # flake8-annotations
  # "COM",  # flake8-commas
  # "D",    # pydocstyle
  # "DJ",   # flake8-django
  # "EM",   # flake8-errmsg
  # "ERA",  # eradicate
  # "NPY",  # NumPy-specific rules
  # "PD",   # pandas-vet
  # "Q",    # flake8-quotes
  # "RET",  # flake8-return
  # "T20",  # flake8-print
  # "TRY",  # tryceratops
]
ignore = [
  "A003",
  "ARG002",
  "DTZ003",
  "EXE002",
  "F401",
  "FBT001",
  "FBT002",
  "G003",
  "G004",
  "INP001",
  "N999",
  "PGH003",
  "PLC1901",
  "PLR2004",
  "PLR5501",
  "PLW2901",
  "PTH110",
  "PTH123",
#  "RUF012", # Error: src/models/api/handlers/all.py:18:35: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
  "RSE102",
  "S113",
  "S324",
  "S501",
  ]
line-length = 160
target-version = "py37"

[tool.ruff.isort]
known-first-party = ["config"]

[tool.ruff.mccabe]
max-complexity = 11

[tool.ruff.per-file-ignores]
# We intentionally use 0.0.0.0
#"app.py" = ["S104"]
# Ignore SQL injection warning
#"published_article_query.py" = ["S608"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
